/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.gui.przedmioty;

import org.database.models.Przedmiot;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import org.netbeans.api.settings.ConvertAsProperties;
import org.officelaf.listeners.TopComponentsManagerListener;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.WindowManager;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.gui.przedmioty//PokazPrzedmioty//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "PokazPrzedmiotyTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "rightSlidingSide", openAtStartup = false)
@ActionID(category = "Window", id = "org.gui.przedmioty.PokazPrzedmiotyTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_PokazPrzedmiotyAction",
        preferredID = "PokazPrzedmiotyTopComponent"
)
@Messages({
    "CTL_PokazPrzedmiotyAction=PokazPrzedmioty",
    "CTL_PokazPrzedmiotyTopComponent=Lista przedmiotow",
    "HINT_PokazPrzedmiotyTopComponent=Lista wszystkich przedmiotow, ktore prowadzisz"
})
public final class PokazPrzedmiotyTopComponent extends TopComponent {

    public PokazPrzedmiotyTopComponent() {
        initComponents();
        setName(Bundle.CTL_PokazPrzedmiotyTopComponent());
        setToolTipText(Bundle.HINT_PokazPrzedmiotyTopComponent());
        tabela_przedmiotow.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        setListener();  
    }

    private void setListener() {
        tabela_przedmiotow.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent me) {
                JTable table = (JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if (me.getClickCount() == 2) {
                    PokazPrzedmiotyTopComponent window = (PokazPrzedmiotyTopComponent) WindowManager.getDefault().findTopComponent("PokazPrzedmiotyTopComponent");
                    EdytujPrzedmiotPanel panel = new EdytujPrzedmiotPanel(Przedmiot.getPrzedmiot((Integer) table.getValueAt(row, 0)));
                    Object[] options = {
                        "Edytuj", "Anuluj"
                    };
                    int input = JOptionPane.showOptionDialog(window, panel, "Edytuj przedmiot", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
                    if (input == JOptionPane.OK_OPTION) {
                        panel.SaveAll();
                        Aktualizuj();
                    }
                }
            }
        });
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        archiwalne_przedmioty = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_przedmiotow = new javax.swing.JTable();

        org.openide.awt.Mnemonics.setLocalizedText(archiwalne_przedmioty, org.openide.util.NbBundle.getMessage(PokazPrzedmiotyTopComponent.class, "PokazPrzedmiotyTopComponent.archiwalne_przedmioty.text")); // NOI18N
        archiwalne_przedmioty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                archiwalne_przedmiotyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(archiwalne_przedmioty, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(archiwalne_przedmioty)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        tabela_przedmiotow.setModel(new PrzedmiotyTableModel());
        tabela_przedmiotow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabela_przedmiotowMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela_przedmiotow);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void archiwalne_przedmiotyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_archiwalne_przedmiotyActionPerformed
        PokazPrzedmiotyTopComponent window = this;
        TableModel model = window.getTabelaPrzedmiotow().getModel();
        clearTable((DefaultTableModel) window.getTabelaPrzedmiotow().getModel());
        List<Przedmiot> list = null;
        if(!archiwalne_przedmioty.isSelected()) {
            list = Przedmiot.getPrzedmioty(UniversalFunctions.StartRokuAkademickiego());
        } else {
            list = Przedmiot.getPrzedmioty(0);
        }
        int rowId = 0;
        for (Przedmiot p : list) {
            model.setValueAt(p.getId(), rowId, 0);
            model.setValueAt(p.getNazwa(), rowId, 1);
            model.setValueAt(p.getSemestr(), rowId, 2);
            model.setValueAt(p.getRokAkademicki(), rowId, 3);
            rowId++;
        }
        hideIdColumn();
    }//GEN-LAST:event_archiwalne_przedmiotyActionPerformed

    private void tabela_przedmiotowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabela_przedmiotowMouseClicked
        TopComponentsManagerListener.PokazPrzedmiotyTopComponentActivated(this);
    }//GEN-LAST:event_tabela_przedmiotowMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox archiwalne_przedmioty;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tabela_przedmiotow;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        //Jeśli komponent się otwiera trzeba załadować do niego dane
        PokazPrzedmiotyTopComponent window = this;
        TableModel model = window.getTabelaPrzedmiotow().getModel();
        clearTable((DefaultTableModel) window.getTabelaPrzedmiotow().getModel());
        List<Przedmiot> list = null;
        if(!archiwalne_przedmioty.isSelected()) {
            list = Przedmiot.getPrzedmioty(UniversalFunctions.StartRokuAkademickiego());
        } else {
            list = Przedmiot.getPrzedmioty(0);
        }
        int rowId = 0;
        for (Przedmiot p : list) {
            model.setValueAt(p.getId(), rowId, 0);
            model.setValueAt(p.getNazwa(), rowId, 1);
            model.setValueAt(p.getSemestr(), rowId, 2);
            model.setValueAt(p.getRokAkademicki(), rowId, 3);
            rowId++;
        }
        hideIdColumn();
    }

    private void hideIdColumn() {
        TableColumn column = tabela_przedmiotow.getColumn("Id");
        column.setMinWidth(0);
        column.setMaxWidth(0);
        column.setPreferredWidth(0);
    }

    private void clearTable(DefaultTableModel model) {
        int rowCount = model.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            model.removeRow(0);
        }
    }
    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
    public JTable getTabelaPrzedmiotow() {
        return tabela_przedmiotow;
    }
    
    public void Aktualizuj() {
        PokazPrzedmiotyTopComponent window = this;
        TableModel model = window.getTabelaPrzedmiotow().getModel();
        clearTable((DefaultTableModel) window.getTabelaPrzedmiotow().getModel());
        List<Przedmiot> list = null;
        if(!archiwalne_przedmioty.isSelected()) {
            list = Przedmiot.getPrzedmioty(UniversalFunctions.StartRokuAkademickiego());
        } else {
            list = Przedmiot.getPrzedmioty(0);
        }
        int rowId = 0;
        for (Przedmiot p : list) {
            model.setValueAt(p.getId(), rowId, 0);
            model.setValueAt(p.getNazwa(), rowId, 1);
            model.setValueAt(p.getSemestr(), rowId, 2);
            model.setValueAt(p.getRokAkademicki(), rowId, 3);
            rowId++;
        }
        hideIdColumn();  
    }
}
